<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Skyper&#x27;s blog - Container</title>
    <subtitle>Personal blog about IT, Electronics, InfoSec, Hacking, Bug Hunting...</subtitle>
    <link rel="self" type="application/atom+xml" href="https://blog.skyplabs.net/tags/container/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.skyplabs.net"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-07-27T00:00:00+00:00</updated>
    <id>https://blog.skyplabs.net/tags/container/atom.xml</id>
    <entry xml:lang="en">
        <title>Detect whether you are inside a container or not</title>
        <published>2023-07-27T00:00:00+00:00</published>
        <updated>2023-07-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.skyplabs.net/posts/container-detection/"/>
        <id>https://blog.skyplabs.net/posts/container-detection/</id>
        
        <summary type="html">&lt;p&gt;Container technologies (&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;chroot&quot;&gt;chroot&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;linuxcontainers.org&#x2F;&quot;&gt;LXC&lt;&#x2F;a&gt;, …) are very common these
days, especially since the massive adoption of &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.docker.com&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;One of the use cases of container technologies is to isolate services from each
others and from the host system. As a result, in case of an intrusion, the
attacker would be in theory trapped inside a container. From the attacker’s
perspective, it is important to be able to detect if a compromised service lives
in a restricted environment such as a Docker container or if it runs directly on
the host operating system.&lt;&#x2F;p&gt;
&lt;p&gt;One way to do so is to have a look at the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Inode&quot;&gt;inode&lt;&#x2F;a&gt; of the &lt;code&gt;&#x2F;&lt;&#x2F;code&gt; mount point
(&lt;code&gt;ls -id &#x2F;&lt;&#x2F;code&gt;).  On the host system it will be very low (generally 1 or 2) whereas
in a container it will generally be quite high (4851522 in the asciicast):&lt;&#x2F;p&gt;
&lt;script id=&quot;asciicast-318880&quot; src=&quot;https:&#x2F;&#x2F;asciinema.org&#x2F;a&#x2F;318880.js&quot; async&gt;&lt;&#x2F;script&gt;
</summary>
        
    </entry>
</feed>
